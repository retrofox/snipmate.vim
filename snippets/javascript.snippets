# Prototype
snippet proto
	${1:name}.prototype.${2:method} = function(${3:args}) {
		${4:}
	};
#
# --- Functions ---
#
# Anonymous Function
snippet fn
	function ${1:name} (${2:args}) {
		${3}
	};
#
# Var Function
snippet varf
	var ${1:name} = function (${2:args}) {
		${3:}
	};
#
# Inline Function
snippet inf
	function(${1}) {${2}};
#
# --- Control structures ---
# if
# https://developer.mozilla.org/en/JavaScript/Reference/Statements/if...else
snippet if
	if (${1:true}) {
		${2}
	}
#
# if ... else
snippet ife
	if (${1:true}) {
		${2}
	} else {
		${3}
	}
#
# tertiary conditional
snippet t
	${1:a == b} ? ${2:a} : ${3:b}
#
# switch
# https://developer.mozilla.org/en/JavaScript/Reference/Statements/switch
snippet sw
	switch(${1:expression}) {
		case '${2:condition}':
			${3:}
			break;
	}${4:}
#
# extended switch
snippet swe
	switch(${1:expression}) {
		case '${3:condition}':
			${4:}
			break;

		default:
			${2:}
			break;
	}
#
# switch case
snippet case
	case '${1:case}':
		${2:}
		break;${3}
#
# for
snippet f
	for (var ${2:i} = 0; $2 < ${1:array}.length; $2${3:++}) {
		${4:var item = $1[$2];}${5:}
	};
#
# decrement for
snippet decf
	for (var ${2:i} = ${1:Things}.length - 1; $2 >= 0; $2${3:--}) {
		${4:var item = $1[$2];}${5:}
	};
#
# while
# https://developer.mozilla.org/en/JavaScript/Reference/Statements/while
snippet w
	while (${1:expression}) {
		${2:}
	}
#
# do...while
# https://developer.mozilla.org/en/JavaScript/Reference/Statements/do...while
snippet do
	do {
		${2:}
	} while (${1:condition});
#
# Object Method
snippet :f
	${1:name}: function(${2:args}) {
		${3}
	}
#
# setTimeout function
snippet to
	setTimeout(function() {
		${2}
	}, ${1:ms});
#
